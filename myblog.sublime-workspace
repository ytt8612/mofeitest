{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fun",
				"function"
			],
			[
				"test",
				"testPath"
			],
			[
				"grun",
				"grunt-contrib-sass"
			],
			[
				"blo",
				"blogClass"
			],
			[
				"pr",
				"process"
			],
			[
				"db",
				"dbname"
			],
			[
				"pers",
				"personSocket"
			],
			[
				"lo",
				"log"
			],
			[
				"ch",
				"checkToken"
			],
			[
				"bo",
				"BODY	Tag"
			],
			[
				"req",
				"reqedHtml"
			],
			[
				"su",
				"subTitleDom"
			],
			[
				"head",
				"headData"
			],
			[
				"mime",
				"mimeArray"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "var appInfo = {\n  port : 4009,\n  type : 'GNode',\n  id : 'gn1',\n  ip : require('os').networkInterfaces()['eth0'][0].address\n};\n\nvar brain = require('../brain/brain');\nvar hash = require('../hash/hash');\nvar redis = require('redis');\nvar ybmp = require('../../api/ybmp');\nvar redisConnect = require('../redis/connect');\nvar conf = require('../../conf/config');\nvar restful = require('../restful/restful');\nvar ObjectID = require('mongodb').ObjectID\nvar mongoClient = require('../mongodb/connect');\n\n//add to brain\nbrain.add(appInfo.type, appInfo.id, appInfo.ip, appInfo.port);\n\nvar group = function() {\n  return group['init'].apply(this, arguments);\n};\n\n(function(exp) {\n  exp.conf = {\n    group : {},\n    msgStack : {}\n  }\n\n  exp.init = function() {\n\n    //connect to the redis\n    var redisHost = hash.getHash('GRedis', appInfo.id);\n    var client = redis.createClient(redisHost.port, redisHost.ip);\n    client.on(\"ready\", function() {\n      client.on('message', function(channel, message) {\n        console.log('   [group message] ' + message)\n        var info = JSON.parse(message);\n        if (info.order == 'MSG') {\n          //send msg\n          console.log('--------');\n          exp.groupMsg(info);\n        } else if (info.order == 'SYS') {\n          delete exp.conf.group[info.group];\n        }\n      });\n      client.subscribe('Group.' + appInfo.id);\n      console.log('   [Group] listen redis ' + 'Group.' + appInfo.id + '@' + redisHost.ip + ':' + redisHost.port);\n    });\n\n  };\n\n  /**\n   * @method groupMsg\n   * publish group message\n   * @param {Object} gId\n   * @param {Object} msg\n   */\n  var temp = 0;\n\n  exp.groupMsg = function(msg) {\n    var gId = msg.togroup;\n    console.log('!!!!',gId,exp.conf.group[gId])\n    if (exp.conf.group[gId]) {\n      //post\n    } else {\n      //push to stack list           \n      exp.conf.msgStack[gId] = exp.conf.msgStack[gId] || {};\n      exp.conf.msgStack[gId]['list'] = exp.conf.msgStack[gId]['list'] || [];\n      exp.conf.msgStack[gId]['list'].push(msg);\n      //get list\n      if (exp.conf.msgStack[gId]['sta'] == 'ing') {\n        return false\n      }\n      exp.conf.msgStack[gId]['sta'] = 'ing';\n\n      var options = {\n        \"hostname\" : \"10.21.3.59\",\n        \"port\" : 8888,\n        \"path\" : \"/api/v1/talks/\" + gId + \"/members?access_token=\" + msg.access_token + \"&creatorid=\" + msg.groupfounder + \"&kind=\" + msg.kind,\n        \"callback\" : function(Jdata) {\n          var data = JSON.parse(Jdata);\n\n          console.log('got data from server', data);\n\n          if (data.response == 100) {\n            if (data.data.count > 0) {\n\n              var members = data.data.members;\n\n              exp.conf.group[gId] = {};\n              for (var i = 0, len = members.length; i < len; i++) {\n                exp.conf.group[gId][members[i]['user_id']] = {\n                  name : members[i]['username']\n                }\n              };\n              //run the stack MSG\n              var stackMsg = exp.conf.msgStack[gId]['list'];\n              for (var i = 0, len = stackMsg.length; i < len; i++) {\n                exp.groupMsg(stackMsg[i])\n              }\n              delete exp.conf.msgStack[gId];\n              console.log(gId + ' got ', members);\n            } else {\n              exp.conf.msgStack[gId]['sta'] = '';\n              console.log(gId + ' have no user');\n            }\n          } else {\n            exp.conf.msgStack[gId]['sta'] = '';\n            console.log('    [Group]', data.response, data.message);\n          }\n        }\n      };\n\n      console.log('---> requerst ', options.path);\n\n      restful.get(options)\n      return false;\n\n    };\n\n    //redisStack\n    //catch user's reids\n    var redisStack = {};\n    for (i in exp.conf.group[gId]) {\n      console.log('group user ' + i);\n      var user = exp.conf.group[gId][i];\n\n      user.redis = user.redis || hash.getHash('PRedis', i);\n      var pRedisId = user.redis['id'];\n      redisStack[pRedisId] = redisStack[pRedisId] || {};\n      redisStack[pRedisId]['redis'] = redisStack[pRedisId]['redis'] || user.redis;\n      redisStack[pRedisId]['users'] = redisStack[pRedisId]['users'] || [];\n      redisStack[pRedisId]['users'].push(i);\n    }\n\n    //send message to every one\n    for (i in redisStack) {\n      //asynchronous\n      (function(i, redisStack, msg) {\n        var host = redisStack[i]['redis'];\n\n        redisConnect.connect(host.port, host.ip, function(client) {\n          var users = redisStack[i]['users'];\n          var userLen = users.length;\n          var pushNum = 0;\n          var onlineU = [];\n          var offlineU = [];\n          for (var j = 0, len = userLen; j < len; j++) {\n            (function(j, client, msg) {\n              var user = users[j];\n              client.sismember('online', user, function(err, res) {\n                if (res === 1) {\n                  //scoket is online\n                  console.log('    [group] user ' + user + ' is online');\n\n                  client.publish('Room.' + user, JSON.stringify(msg));\n                  onlineU.push(user);\n                } else {\n                  //socket is offline\n                  console.log('    [group] user ' + user + ' is offline');\n\n                  msg.togroupuser = user;\n                  offline(msg);\n                  offlineU.push(user);\n                }\n                pushNum++;\n                if (pushNum == userLen) {\n                  msg.online = onlineU;\n                  msg.offline = offlineU;\n                  msg.type = msg.type;\n                  messagePushResult(msg);\n                  onlineU = null;\n                  offlineU = null;\n                }\n              })\n            })(j, client, msg);\n          }\n        });\n      })(i, redisStack, msg)\n    };\n    //for offline message try to push to the drives\n    function offline(msg) {\n      if (msg.type === '6') {\n        //in group notification we needn't push offline message\n        //the other serve will do this .\n        return false;\n      }\n      redisConnect.connect(conf.sta.PPSH.pp1.port, conf.sta.PPSH.pp1.ip, function(client) {\n        client.publish('plugpush', JSON.stringify(msg));\n      });\n    };\n\n    //for group notification\n    function messagePushResult(msg) {\n      console.log('[group] 6 ï¼šgroupNotification ', msg);\n\n      //if the message is group notification we update the database\n      mongoClient.connect(function(mongoConnect) {\n        var msgId = msg.msgid;\n        var collection = mongoConnect.db(\"larvel\").collection('Notices');\n        collection.find({\n          \"_id\" : parseInt(msgId)\n        }).toArray(function(err, res) {\n          if (res.length >= 1) {\n            var received = res[0]['hasrecieved'].concat(msg.online);\n            var unreceived = res[0]['unrecieved'].concat(msg.offline).filter(function(ele) {\n              return received.indexOf(ele) == -1\n            });\n\n            collection.update({\n              \"_id\" : parseInt(msgId)\n            }, {\n              $set : {\n                \"hasrecieved\" : received,\n                \"unrecieved\" : unreceived,\n                \"status\" : 2\n              }\n            }, function() {\n              console.log('[group.js update success]--->', {\n                \"hasrecieved\" : received,\n                \"unrecieved\" : unreceived,\n                \"status\" : 2\n              })\n            });\n          }\n\n        })\n      });\n\n    }\n\n  };\n})(group);\n\ngroup();\n",
			"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/group/group.js",
			"file_size": 7376,
			"file_write_time": 1398655334000000,
			"settings":
			{
				"buffer_size": 7385,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gruntfile.js",
			"settings":
			{
				"buffer_size": 1601,
				"line_ending": "Unix",
				"name": "Gruntfile.js"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 524,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "module.exports = require('./lib/mblog');",
			"file": "node_modules/mblog/index.js",
			"file_size": 40,
			"file_write_time": 1398696299000000,
			"settings":
			{
				"buffer_size": 40,
				"line_ending": "Unix"
			}
		},
		{
			"file": "node_modules/mblog/lib/mblog/router/router_dynamic.js",
			"settings":
			{
				"buffer_size": 2599,
				"line_ending": "Unix"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/server.js",
			"settings":
			{
				"buffer_size": 544,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var net = require('net');\n\nvar connPool = {};\n\nexports.sub = function(port, id, channel, callback) {\n    var name = port + id;\n    if (connPool) {} else {\n        var client = new net.Socket();\n        client.connect({\n            host: 'id',\n            port: port\n        });\n        client.on('connect', function() {\n\n        });\n        client.on('error', function() {\n            console.log('connect error');\n        });\n        client.on('end', function() {\n\n        });\n        client.on('data', function() {\n\n        });\n\n    }\n};\n\nexports.sub(5544, '127.0.0.1', '123', function() {\n\n});",
			"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/client.js",
			"file_size": 435,
			"file_write_time": 1398748580000000,
			"settings":
			{
				"buffer_size": 596,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"git pus",
				"Git: Push"
			],
			[
				"gi",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git p",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git con",
				"Git: Open Config File"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add..."
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"git pu",
				"Git: Pull"
			],
			[
				"git  ",
				"Git: Commit"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git ps",
				"Git: Push"
			],
			[
				"git  c",
				"Git: Commit"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git a",
				"Git: Add..."
			],
			[
				"push",
				"Git: Push"
			],
			[
				"c",
				"Git: Commit"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"git hi",
				"Git: Commit history"
			],
			[
				"gitadd",
				"Git: Add..."
			],
			[
				"gitcomm",
				"Git: Commit"
			],
			[
				"svn",
				"SVN: Unlock, Interactiveâ€¦"
			],
			[
				"svn in",
				"SVN: (File) Ignore"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"pus",
				"Git: Push"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"pu",
				"Git: Push"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"comi",
				"Git: Commit"
			],
			[
				"gitp",
				"Git: Push"
			],
			[
				"gitc",
				"Git: Commit"
			],
			[
				"g",
				"Git: Status"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/brain/brain.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/client.hs",
		"/usr/local/projects/newblog/app.js",
		"/usr/local/projects/newblog/blog/index.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/msg/offline.js",
		"/usr/local/projects/newblog/static/sass/blog/blog.sass",
		"/usr/local/projects/newblog/static/js/index.js",
		"/usr/local/projects/newblog/static/sass/common.sass",
		"/usr/local/projects/newblog/node_modules/mblog/lib/mblog/index.js",
		"/usr/local/projects/newblog/blog/index.jade",
		"/usr/local/projects/newblog/node_modules/mblog/lib/mblog/router/router_get.js",
		"/usr/local/projects/newblog/node_modules/mblog/index.js",
		"/usr/local/projects/newblog/component/layout.jade",
		"/usr/local/projects/newblog/node_modules/mblog/lib/mblog/router/router_dynamic.js",
		"/usr/local/projects/newblog/node_modules/mblog/.git/config",
		"/usr/local/projects/newblog/node_modules/mblog/package.json",
		"/usr/local/projects/newblog/node_modules/mblog/lib/mblog/mime/mime.js",
		"/usr/local/projects/newblog/static/js/index.min.js",
		"/usr/local/projects/newblog/.project",
		"/usr/local/projects/newblog/myblog.sublime-workspace",
		"/usr/local/projects/newblog/index.jade",
		"/usr/local/projects/newblog/package.json",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/router/router_dynamic.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/blog/index.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/blog/index.jade",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/sass/common.sass",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/sass/blog/blog.sass",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/router/router.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/msg/msgsend.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/dispatch/dispatch_notification.js",
		"/usr/local/projects/node_modules/sockjs/lib/sockjs.js",
		"/usr/local/projects/node_modules/sockjs/lib/utils.js",
		"/usr/local/projects/node_modules/sockjs/lib/transport.js",
		"/usr/local/projects/node_modules/sockjs/index.js",
		"/usr/local/projects/node_modules/faye/node/faye-node.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/all.js",
		"/usr/local/projects/node_modules/faye/package.json",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/mongo/connection.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/reg/reg.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/socketConnect/connect.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/brain/brainServer.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/mongodb/connect.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/socketConnect/connecttest.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/group/group.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/mongo/connect.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/app.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/.git/config",
		"/Users/mofei/Library/Application Support/Sublime Text 2/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/package.json",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/conf/config.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/reg/checktoken.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/redis/connect.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/package.json",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/sftp-config.json",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/component/layout.jade",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/index.jade",
		"/Users/mofei/Desktop/require.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/sass/index.sass",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/css/common.css",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/css/blog/blog.css",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/js/index.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/test.html",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/css/normalize.css",
		"/Users/mofei/projects/yiban_app/laravel/app/views/mobile/passport/bind.php",
		"/Users/mofei/projects/yiban_app/laravel/app/views/mobile/passport/register.php",
		"/Users/mofei/projects/yiban_app/laravel/app/views/mobile/passport/findpass.php",
		"/Users/mofei/projects/yiban_app/laravel/app/views/mobile/passport/schoolcert.php",
		"/Users/mofei/projects/yiban_app/laravel/public/static/js/passport/reg_ios.js",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-svn-1398216581/SVN",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-svn-1398216574/SVN",
		"/Users/mofei/projects/yiban_app/laravel/app/views/mobile/passport/yiban_app.sublime-project",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/README.md",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/node_modules/jade/node_modules/monocle/node_modules/readdirp/examples/Readme.md",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/test/index.html",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/router/router_response.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/blog/index.html",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/component/head.jade",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/head.jade",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-svn-1398129660/SVN",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/component/head.html",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/index.html",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/sass/blog/blog.css",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/css/index.css",
		"/Users/mofei/projects/yiban_app/sftp-config.json",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-svn-1398061759/SVN",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-svn-1398060427/SVN",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-svn-1398060391/SVN",
		"/var/folders/cl/p74qnm_n1pz_p548yz494kcc0000gn/T/sublime-sftp-browse-1398059866/mapped/usr/local/yiban_app/laravel/public/index.php",
		"/Users/mofei/Library/Application Support/Sublime Text 2/Packages/JSHint Gutter/.jshintrc",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/sftp-config.json",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/js/jQuery-v1.11.0.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/img/background.jpg",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static/test.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/index.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/index.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/mime/mime.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/router/router_static.js",
		"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/node_modules/mblog/lib/mblog/config/config.js",
		"/Users/mofei/Library/Application Support/Sublime Text 2/Packages/JSHint Gutter/JSHint.sublime-settings",
		"/Users/mofei/Library/Application Support/Sublime Text 2/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/mofei/Documents/Aptana Studio 3 Workspace/newblog/static"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"routerDate",
			"typeof",
			"absolute",
			".main_section",
			"confGet",
			"blogday",
			"}}\n",
			"NodeAdapter",
			"exports",
			"e'x'po'r't's",
			"main_section",
			"blogNav",
			"blogList",
			".blogList",
			"blogContent",
			"      \n",
			"host",
			"write",
			"wirte",
			"wirete",
			"appinfo",
			"ybmp",
			"hash",
			"msgId",
			"id.",
			"onLineRedis",
			"cfg",
			"index_titles",
			"\n",
			"();\n",
			"6em",
			"{});",
			"res404",
			")\n",
			"404",
			"reqedFile",
			"dynami",
			"\n",
			"())\n",
			"                        \n",
			"        	\n",
			"option",
			"0",
			"			\n",
			"size",
			"keyw",
			"                    \n",
			"            \n",
			"asdfas",
			");\n",
			"mime",
			"p",
			"g",
			"{\n",
			"modelPath",
			"defaulteFile",
			"fs",
			"aptana"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/group/group.js",
					"settings":
					{
						"buffer_size": 7385,
						"regions":
						{
						},
						"selection":
						[
							[
								1769,
								1769
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1088.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Gruntfile.js",
					"settings":
					{
						"buffer_size": 1601,
						"regions":
						{
						},
						"selection":
						[
							[
								1296,
								1296
							]
						],
						"settings":
						{
							"auto_name": "Gruntfile.js",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 241.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "package.json",
					"settings":
					{
						"buffer_size": 524,
						"regions":
						{
						},
						"selection":
						[
							[
								365,
								365
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "node_modules/mblog/index.js",
					"settings":
					{
						"buffer_size": 40,
						"regions":
						{
						},
						"selection":
						[
							[
								40,
								40
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "node_modules/mblog/lib/mblog/router/router_dynamic.js",
					"settings":
					{
						"buffer_size": 2599,
						"regions":
						{
						},
						"selection":
						[
							[
								1643,
								1643
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 283.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"default_dir": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib",
							"incomplete_sync": null,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/server.js",
					"settings":
					{
						"buffer_size": 544,
						"regions":
						{
						},
						"selection":
						[
							[
								26,
								26
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/mofei/Documents/Aptana Studio 3 Workspace/ybmp/lib/pubsub/client.js",
					"settings":
					{
						"buffer_size": 596,
						"regions":
						{
						},
						"selection":
						[
							[
								477,
								477
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 118.0
	},
	"output.sftp":
	{
		"height": 118.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"reeadme",
				"newblog/node_modules/mblog/node_modules/jade/node_modules/monocle/node_modules/readdirp/examples/Readme.md"
			],
			[
				"",
				"newblog/component/layout.jade"
			],
			[
				"head",
				"newblog/head.jade"
			],
			[
				"in",
				"newblog/index.jade"
			],
			[
				"l",
				"newblog/component/layout.jade"
			],
			[
				"ind",
				"newblog/index.jade"
			],
			[
				"inde",
				"newblog/index.jade"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 211.0,
	"status_bar_visible": true
}
